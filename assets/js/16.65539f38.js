(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{274:function(e,t,o){"use strict";o.r(t);var s=o(0),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("Hero"),e._v(" "),o("h2",{attrs:{id:"summary"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#summary"}},[e._v("#")]),e._v(" Summary")]),e._v(" "),o("p",[e._v("Jupyter has become a staple in modern data science, allowing the sharing of reproducible results. However, most data scientists today share their findings with blog posts and either include code snippets or links to their notebooks. This project is a tool built for hosting a blog built on top of Jupyter Notebooks, allowing for findings to be presented directly an attractive blog.")]),e._v(" "),o("h2",{attrs:{id:"status-offline-for-rework"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#status-offline-for-rework"}},[e._v("#")]),e._v(" Status - Offline for Rework")]),e._v(" "),o("p",[e._v('Callisto was used as the primary blog here for about six months. During that time several issues and challenges were discovered from using Callisto "in production" that slowed down the blogging process via Jupyter so a decision was made to switch to VuePress.')]),e._v(" "),o("p",[e._v("Some challenges included:")]),e._v(" "),o("ul",[o("li",[e._v("no navigation side bar")]),e._v(" "),o("li",[e._v("no search")]),e._v(" "),o("li",[e._v("long loading times")]),e._v(" "),o("li",[e._v("image encoding and decoding")]),e._v(" "),o("li",[e._v("lack of spellcheck")]),e._v(" "),o("li",[e._v('difficulty writing long posts in Jupyter due to "cell" structure')])]),e._v(" "),o("p",[e._v("Callisto has currently been taken offline to be reworked as a VuePress plugin, which this site is currently running on. None of these challenges above are insurmountable and with enough code it is possible to solve all these issues. However, VuePress currently performs 99% of all required functionality with the exception of direct Jupyter output rendering. As such, Callisto is being reworked as a VuePress plugin, which will then take in Notebook files, parse them into Markdown and pass them onto VuePress to be rendered as a static site. This page continues to hold the historical dev log for Callisto and will be updated when the revision is complete.")]),e._v(" "),o("h2",{attrs:{id:"motivation"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#motivation"}},[e._v("#")]),e._v(" Motivation")]),e._v(" "),o("p",[e._v("When working on machine learning based projects, data scientists often use Jupyter as their primary workflow. This includes running experiments but can also extend to full application development. Creating a blog post one way to share these projects but this comes with some overhead - blogging platforms are separate entities from Jupyter based workflows and often have their own tools and workflows; one such example is Ghost. Ghost is an excellent blogging platform but in order to show code or results from Jupyter cell execution, content has to be copy-pasted into the blog post, or hosted separately and then linked to. For projects that are in flux, this could mean that the contents of the blog post become out of date from the source content.")]),e._v(" "),o("h2",{attrs:{id:"callisto"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#callisto"}},[e._v("#")]),e._v(" Callisto")]),e._v(" "),o("p",[e._v("Named after Jupyter's orbiting moon, Callisto aims to solve the problem of blog post - source code dissonance. Callisto is built to render Jupyter notebooks as blog posts. The notebooks can be hosted with the site or in the repository which they belong. For example, this page is being generated from this notebook on in the Callisto repository. This allows the notebook (and conversely the blog post) to have access to the code and data files that it's associated with. An example of this is demonstrated below - data.json is loaded directly used standard Python and then displayed using the output cell.")]),e._v(" "),o("p",[e._v("data.json")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v('{\n    "info": \n    {\n        "siteTitle": "Notebook",\n        "siteSubtitle": "AI, Security, Automation"\n    },\n\n    "posts": \n    [\n        {\n            "source": "https://raw.githubusercontent.com/wxc-kumar/workflow/master/blog.ipynb",\n            "title": "Modern AI Development Pipeline using Docker, GPU, Jupyter and VS Code",\n            "datePublished": "2019-10-01",\n            "dateUpdated": "2019-10-02T04:25:07.393839",\n             ...\n        }\n    ]\n}\n')])])]),o("h2",{attrs:{id:"preprocessor"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#preprocessor"}},[e._v("#")]),e._v(" Preprocessor")]),e._v(" "),o("p",[e._v("Callisto revolves around a single file, data.json which is treated as a readonly database for the blog. Before the data file can be used, it has to be preprocessed. At this stage, data.json requires a minimum of "),o("code",[e._v('{ posts: [ { "source" : <path-to-notebook> } ] }')]),e._v(", with a post.source for each notebook to be shown. Running python preprocess.py reads the file, downloads each of the notebook to scan it for some basic properties, including title, date, summary and splash image. The splash image is saved locally and the fields are added in the file but the downloaded notebook is discarded. This is to allow the notebook to be updated where it is hosted (usually along side some of its associated code) but gives the site some bare minimum information to display on the home page.")]),e._v(" "),o("h2",{attrs:{id:"web-app"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#web-app"}},[e._v("#")]),e._v(" Web App")]),e._v(" "),o("p",[e._v("The actual blog itself is a simple VueJS single page application which uses Axios, Marked and Less. The application is split into three core components: a Less theme, the home page and notebook page, which are loaded into index.html via router-view.")]),e._v(" "),o("h3",{attrs:{id:"home-page"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#home-page"}},[e._v("#")]),e._v(" Home Page")]),e._v(" "),o("p",[e._v("The home page reads from data.json to display the tile components presented on the page. When a user clicks a specific tile, they are forwarded to the notebook page via router-link.")]),e._v(" "),o("h3",{attrs:{id:"notebooks"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#notebooks"}},[e._v("#")]),e._v(" Notebooks")]),e._v(" "),o("p",[e._v("The notebook page pulls the Python notebook from where it is hosted and displays it using conditional rendering using some display rules. Markdown cells are treated normally, passed to Marked to be parsed and then displayed using v-html.")]),e._v(" "),o("p",[e._v("Code blocks are treated differently. The user can leave special comments at the top of the respective cell to define the type of the cell and its purpose. For example, if a cell generates an image, we can add #image-show-output. This tells Callisto that the output cell contains an image and that we want to show it - but not the command that generated it. If we wanted to additionally show the command that generated the image, we can change the line to #image-show-input-output to show both. This can also be done for code cells using "),o("code",[e._v("#code-show-<input>/<output>")]),e._v(".")]),e._v(" "),o("h3",{attrs:{id:"theme"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#theme"}},[e._v("#")]),e._v(" Theme")]),e._v(" "),o("p",[e._v("The theme is implemented via Less and is inspired by Ghost blog's open source Casper theme. The theme was designed to be modifiable/replaceable by using Less variables for core styling. Because the output of the notebook is laid out sequentially in the HTML, the theme creator can expect a consistent layout so the theming can be done entirely via Less.")]),e._v(" "),o("h2",{attrs:{id:"hosting"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#hosting"}},[e._v("#")]),e._v(" Hosting")]),e._v(" "),o("p",[e._v("Being an entirely client side application, Callisto does not require a web server, just the ability to serve static content. As such, this instance is hosted via GitHub pages. One point of note is that hosting as a static site leaves a # in the URL bar, which is used by the Vue router. More details can be found here.")]),e._v(" "),o("h2",{attrs:{id:"limitations"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#limitations"}},[e._v("#")]),e._v(" Limitations")]),e._v(" "),o("p",[e._v("As a blogging platform, Callisto has some distinct limitations - it's missing many features, including search, tags, comments and perhaps mostly importantly, spellcheck. Future work may be done to address these issues as the need arises. Search can be reliably implemented with Google Custom Search (recommended by Ghost blog, after which Callisto is fashioned) and comments can be integrated with Disqus.")])],1)}),[],!1,null,null,null);t.default=a.exports}}]);